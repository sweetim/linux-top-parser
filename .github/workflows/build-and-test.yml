name: build and test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - name: collect workflow telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
    - uses: actions/checkout@v3
    - name: use node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
    - run: npm run build --if-present
    - run: npm run coverage
    - name: analyze test and/or coverage results
      uses: runforesight/foresight-test-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        test_format: JUNIT
        test_framework: JEST
        test_path: ./coverage/test-results.xml
        coverage_format: LCOV/TXT
        coverage_path: ./coverage/lcov.info
        tags: |
          node_version: ${{ matrix.node-version }}
          event_name: ${{github.event_name}}
    - name: archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/**

  build-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: lint dockerfile
      uses: luke142367/Docker-Lint-Action@v1.0.0
      with:
        target: Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/setup-buildx-action@v2.5.0
    - name: build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/linux-top-parser:latest

  code-analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: use node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: get coverage report folder
      uses: actions/download-artifact@v3
      with:
        name: code-coverage-report
        path: coverage
    - name: analyze with sonar cloud
      uses: SonarSource/sonarcloud-github-action@db501078e936e4b4c8773d1bb949ba9ddb7b6b6a
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
    - name: analyze with qodana
      uses: JetBrains/qodana-action@main
      env:
        QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
